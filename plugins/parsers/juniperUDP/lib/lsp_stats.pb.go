// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lsp_stats.proto

/*
Package lsp_stats is a generated protocol buffer package.

It is generated from these files:
	lsp_stats.proto

It has these top-level messages:
	LspStats
	LspStatsRecord
*/
package lsp_stats

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LspStats struct {
	LspStatsRecords  []*LspStatsRecord `protobuf:"bytes,1,rep,name=lsp_stats_records" json:"lsp_stats_records,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *LspStats) Reset()                    { *m = LspStats{} }
func (m *LspStats) String() string            { return proto.CompactTextString(m) }
func (*LspStats) ProtoMessage()               {}
func (*LspStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LspStats) GetLspStatsRecords() []*LspStatsRecord {
	if m != nil {
		return m.LspStatsRecords
	}
	return nil
}

type LspStatsRecord struct {
	Name               *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	InstanceIdentifier *uint32 `protobuf:"varint,2,req,name=instance_identifier" json:"instance_identifier,omitempty"`
	CounterName        *string `protobuf:"bytes,3,req,name=counter_name" json:"counter_name,omitempty"`
	Packets            *uint64 `protobuf:"varint,4,opt,name=packets" json:"packets,omitempty"`
	Bytes              *uint64 `protobuf:"varint,5,opt,name=bytes" json:"bytes,omitempty"`
	PacketRate         *uint64 `protobuf:"varint,6,opt,name=packet_rate" json:"packet_rate,omitempty"`
	ByteRate           *uint64 `protobuf:"varint,7,opt,name=byte_rate" json:"byte_rate,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *LspStatsRecord) Reset()                    { *m = LspStatsRecord{} }
func (m *LspStatsRecord) String() string            { return proto.CompactTextString(m) }
func (*LspStatsRecord) ProtoMessage()               {}
func (*LspStatsRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LspStatsRecord) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LspStatsRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *LspStatsRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *LspStatsRecord) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *LspStatsRecord) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *LspStatsRecord) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *LspStatsRecord) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprLspStatisticsExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*LspStats)(nil),
	Field:         5,
	Name:          "jnpr_lsp_statistics_ext",
	Tag:           "bytes,5,opt,name=jnpr_lsp_statistics_ext",
	Filename:      "lsp_stats.proto",
}

func init() {
	proto.RegisterType((*LspStats)(nil), "LspStats")
	proto.RegisterType((*LspStatsRecord)(nil), "LspStatsRecord")
	proto.RegisterExtension(E_JnprLspStatisticsExt)
}

func init() { proto.RegisterFile("lsp_stats.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0xc0, 0x71, 0x39, 0x6d, 0xbe, 0x36, 0x97, 0x0f, 0xaa, 0x3a, 0x88, 0x5a, 0xb0, 0x44, 0x99,
	0x22, 0x86, 0x0c, 0x1d, 0x18, 0x98, 0x10, 0x6c, 0x08, 0x31, 0xd0, 0x07, 0xb0, 0x42, 0x7a, 0x48,
	0xa6, 0xad, 0x6d, 0xf9, 0xae, 0x82, 0xae, 0x3c, 0x17, 0x0f, 0x87, 0x92, 0x28, 0x55, 0x59, 0x7f,
	0xfe, 0xfb, 0x2c, 0x1f, 0xcc, 0xb6, 0xe4, 0x35, 0x71, 0xcd, 0x54, 0xf9, 0xe0, 0xd8, 0x5d, 0x65,
	0x8c, 0x5b, 0xdc, 0x21, 0x87, 0x83, 0x66, 0xe7, 0x7b, 0x2c, 0x6e, 0x61, 0xfa, 0x4c, 0x7e, 0xd5,
	0x66, 0xf2, 0x06, 0xe6, 0xc7, 0x3b, 0x3a, 0x60, 0xe3, 0xc2, 0x9a, 0x94, 0xc8, 0x47, 0x65, 0xba,
	0x9c, 0x55, 0x43, 0xf5, 0xda, 0x79, 0xf1, 0x23, 0xe0, 0xfc, 0x2f, 0xc9, 0x0c, 0xc6, 0xb6, 0xde,
	0xa1, 0x12, 0x79, 0x54, 0x26, 0x0f, 0xf1, 0xf7, 0x7d, 0x34, 0x15, 0xb2, 0x80, 0xcc, 0x58, 0xe2,
	0xda, 0x36, 0xa8, 0xcd, 0x1a, 0x2d, 0x9b, 0x77, 0x83, 0x41, 0x45, 0x79, 0x54, 0x9e, 0x0d, 0xcd,
	0x35, 0xfc, 0x6f, 0xdc, 0xde, 0x32, 0x06, 0xdd, 0x0d, 0x18, 0x9d, 0x0e, 0xb8, 0x84, 0x89, 0xaf,
	0x9b, 0x0d, 0x32, 0xa9, 0x71, 0x2e, 0xca, 0x71, 0xe7, 0x4a, 0xc8, 0x0b, 0x88, 0xdf, 0x0e, 0x8c,
	0xa4, 0xe2, 0x53, 0xcd, 0x20, 0xed, 0x6b, 0x1d, 0x6a, 0x46, 0xf5, 0xaf, 0x3d, 0x93, 0x73, 0x48,
	0xda, 0xb4, 0xa7, 0x49, 0x4b, 0x77, 0x8f, 0xb0, 0xf8, 0xb0, 0x3e, 0xe8, 0xe1, 0xbf, 0x86, 0xd8,
	0x34, 0xa4, 0xf1, 0x8b, 0xe5, 0xa2, 0x7a, 0xda, 0x5b, 0xe3, 0x31, 0xbc, 0x20, 0x7f, 0xba, 0xb0,
	0xa1, 0x15, 0x5a, 0x72, 0xa1, 0x7f, 0x28, 0x5d, 0x26, 0xc7, 0x4d, 0xfc, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x3d, 0x4c, 0x67, 0x62, 0x01, 0x00, 0x00,
}
