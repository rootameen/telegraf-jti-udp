// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Bar
	TelemetryFieldOptions
	TelemetryStream
	IETFSensors
	EnterpriseSensors
	JuniperNetworksSensors
*/
package test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bar struct {
	JuniperNetworks  *JuniperNetworksSensors `protobuf:"bytes,100,opt,name=juniperNetworks" json:"juniperNetworks,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Bar) Reset()                    { *m = Bar{} }
func (m *Bar) String() string            { return proto.CompactTextString(m) }
func (*Bar) ProtoMessage()               {}
func (*Bar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Bar) GetJuniperNetworks() *JuniperNetworksSensors {
	if m != nil {
		return m.JuniperNetworks
	}
	return nil
}

type TelemetryFieldOptions struct {
	IsKey            *bool  `protobuf:"varint,1,opt,name=is_key" json:"is_key,omitempty"`
	IsTimestamp      *bool  `protobuf:"varint,2,opt,name=is_timestamp" json:"is_timestamp,omitempty"`
	IsCounter        *bool  `protobuf:"varint,3,opt,name=is_counter" json:"is_counter,omitempty"`
	IsGauge          *bool  `protobuf:"varint,4,opt,name=is_gauge" json:"is_gauge,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TelemetryFieldOptions) Reset()                    { *m = TelemetryFieldOptions{} }
func (m *TelemetryFieldOptions) String() string            { return proto.CompactTextString(m) }
func (*TelemetryFieldOptions) ProtoMessage()               {}
func (*TelemetryFieldOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TelemetryFieldOptions) GetIsKey() bool {
	if m != nil && m.IsKey != nil {
		return *m.IsKey
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsTimestamp() bool {
	if m != nil && m.IsTimestamp != nil {
		return *m.IsTimestamp
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsCounter() bool {
	if m != nil && m.IsCounter != nil {
		return *m.IsCounter
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsGauge() bool {
	if m != nil && m.IsGauge != nil {
		return *m.IsGauge
	}
	return false
}

type TelemetryStream struct {
	SystemId         *string            `protobuf:"bytes,1,req,name=system_id" json:"system_id,omitempty"`
	ComponentId      *uint32            `protobuf:"varint,2,opt,name=component_id" json:"component_id,omitempty"`
	SubComponentId   *uint32            `protobuf:"varint,3,opt,name=sub_component_id" json:"sub_component_id,omitempty"`
	SensorName       *string            `protobuf:"bytes,4,opt,name=sensor_name" json:"sensor_name,omitempty"`
	SequenceNumber   *uint32            `protobuf:"varint,5,opt,name=sequence_number" json:"sequence_number,omitempty"`
	Timestamp        *uint64            `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
	VersionMajor     *uint32            `protobuf:"varint,7,opt,name=version_major" json:"version_major,omitempty"`
	VersionMinor     *uint32            `protobuf:"varint,8,opt,name=version_minor" json:"version_minor,omitempty"`
	Ietf             *IETFSensors       `protobuf:"bytes,100,opt,name=ietf" json:"ietf,omitempty"`
	Enterprise       *EnterpriseSensors `protobuf:"bytes,101,opt,name=enterprise" json:"enterprise,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *TelemetryStream) Reset()                    { *m = TelemetryStream{} }
func (m *TelemetryStream) String() string            { return proto.CompactTextString(m) }
func (*TelemetryStream) ProtoMessage()               {}
func (*TelemetryStream) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TelemetryStream) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *TelemetryStream) GetComponentId() uint32 {
	if m != nil && m.ComponentId != nil {
		return *m.ComponentId
	}
	return 0
}

func (m *TelemetryStream) GetSubComponentId() uint32 {
	if m != nil && m.SubComponentId != nil {
		return *m.SubComponentId
	}
	return 0
}

func (m *TelemetryStream) GetSensorName() string {
	if m != nil && m.SensorName != nil {
		return *m.SensorName
	}
	return ""
}

func (m *TelemetryStream) GetSequenceNumber() uint32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *TelemetryStream) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *TelemetryStream) GetVersionMajor() uint32 {
	if m != nil && m.VersionMajor != nil {
		return *m.VersionMajor
	}
	return 0
}

func (m *TelemetryStream) GetVersionMinor() uint32 {
	if m != nil && m.VersionMinor != nil {
		return *m.VersionMinor
	}
	return 0
}

func (m *TelemetryStream) GetIetf() *IETFSensors {
	if m != nil {
		return m.Ietf
	}
	return nil
}

func (m *TelemetryStream) GetEnterprise() *EnterpriseSensors {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

type IETFSensors struct {
	Test                         *uint32 `protobuf:"varint,101,opt,name=test" json:"test,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *IETFSensors) Reset()                    { *m = IETFSensors{} }
func (m *IETFSensors) String() string            { return proto.CompactTextString(m) }
func (*IETFSensors) ProtoMessage()               {}
func (*IETFSensors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

var extRange_IETFSensors = []proto.ExtensionRange{
	{1, 100},
}

func (*IETFSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_IETFSensors
}

func (m *IETFSensors) GetTest() uint32 {
	if m != nil && m.Test != nil {
		return *m.Test
	}
	return 0
}

type EnterpriseSensors struct {
	Test                         *uint32 `protobuf:"varint,101,opt,name=test" json:"test,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *EnterpriseSensors) Reset()                    { *m = EnterpriseSensors{} }
func (m *EnterpriseSensors) String() string            { return proto.CompactTextString(m) }
func (*EnterpriseSensors) ProtoMessage()               {}
func (*EnterpriseSensors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

var extRange_EnterpriseSensors = []proto.ExtensionRange{
	{1, 100},
}

func (*EnterpriseSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_EnterpriseSensors
}

func (m *EnterpriseSensors) GetTest() uint32 {
	if m != nil && m.Test != nil {
		return *m.Test
	}
	return 0
}

type JuniperNetworksSensors struct {
	Test                         *uint32 `protobuf:"varint,101,opt,name=test" json:"test,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *JuniperNetworksSensors) Reset()                    { *m = JuniperNetworksSensors{} }
func (m *JuniperNetworksSensors) String() string            { return proto.CompactTextString(m) }
func (*JuniperNetworksSensors) ProtoMessage()               {}
func (*JuniperNetworksSensors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

var extRange_JuniperNetworksSensors = []proto.ExtensionRange{
	{1, 100},
}

func (*JuniperNetworksSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_JuniperNetworksSensors
}

func (m *JuniperNetworksSensors) GetTest() uint32 {
	if m != nil && m.Test != nil {
		return *m.Test
	}
	return 0
}

var E_TelemetryOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*TelemetryFieldOptions)(nil),
	Field:         1024,
	Name:          "telemetry_options",
	Tag:           "bytes,1024,opt,name=telemetry_options",
	Filename:      "test.proto",
}

func init() {
	proto.RegisterType((*Bar)(nil), "bar")
	proto.RegisterType((*TelemetryFieldOptions)(nil), "TelemetryFieldOptions")
	proto.RegisterType((*TelemetryStream)(nil), "TelemetryStream")
	proto.RegisterType((*IETFSensors)(nil), "IETFSensors")
	proto.RegisterType((*EnterpriseSensors)(nil), "EnterpriseSensors")
	proto.RegisterType((*JuniperNetworksSensors)(nil), "JuniperNetworksSensors")
	proto.RegisterExtension(E_TelemetryOptions)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xe5, 0x36, 0x1b, 0xd9, 0xdb, 0x96, 0x76, 0x16, 0xdb, 0xac, 0x22, 0x44, 0xe8, 0x01,
	0x2a, 0x84, 0x3c, 0xc4, 0x05, 0x89, 0x13, 0x42, 0xda, 0x24, 0x38, 0x80, 0xd0, 0x76, 0xb7, 0xd2,
	0xf4, 0x5d, 0xe5, 0xad, 0xb6, 0x83, 0x5f, 0x07, 0xd4, 0x1b, 0xe2, 0xe3, 0xf0, 0x29, 0x51, 0xdc,
	0xa6, 0x64, 0x5a, 0x8e, 0xf9, 0xf9, 0x79, 0xf2, 0xfe, 0x7b, 0x00, 0x02, 0x52, 0x90, 0xa5, 0x77,
	0xc1, 0x4d, 0xb3, 0x95, 0x73, 0xab, 0x35, 0x9e, 0xc7, 0xaf, 0x45, 0x75, 0x73, 0xbe, 0x44, 0x2a,
	0xbc, 0x2e, 0x83, 0xf3, 0x5b, 0xc5, 0xec, 0x3d, 0xf4, 0x17, 0xb9, 0xe7, 0x6f, 0x61, 0x7c, 0x5b,
	0x59, 0x5d, 0xa2, 0xff, 0x8a, 0xe1, 0x97, 0xf3, 0x77, 0x24, 0x96, 0x19, 0x9b, 0x0f, 0xde, 0x9d,
	0xc9, 0x2f, 0xf7, 0xf9, 0x15, 0x5a, 0x72, 0x9e, 0x66, 0x05, 0x9c, 0x5c, 0xe3, 0x1a, 0x0d, 0x06,
	0xbf, 0xb9, 0xd4, 0xb8, 0x5e, 0x7e, 0x2b, 0x83, 0x76, 0x96, 0xf8, 0x63, 0x38, 0xd4, 0xa4, 0xee,
	0x70, 0x23, 0x58, 0xc6, 0xe6, 0x29, 0x7f, 0x02, 0x43, 0x4d, 0x2a, 0x68, 0x83, 0x14, 0x72, 0x53,
	0x8a, 0x5e, 0xa4, 0x1c, 0x40, 0x93, 0x2a, 0x5c, 0x65, 0x03, 0x7a, 0xd1, 0x8f, 0x6c, 0x02, 0xa9,
	0x26, 0xb5, 0xca, 0xab, 0x15, 0x8a, 0xa4, 0x26, 0xb3, 0xbf, 0x3d, 0x18, 0xef, 0xab, 0x5c, 0x05,
	0x8f, 0xb9, 0xe1, 0x02, 0x8e, 0x68, 0x43, 0x01, 0x8d, 0xd2, 0x4b, 0xc1, 0xb2, 0xde, 0xfc, 0xe8,
	0xd3, 0xc1, 0x9f, 0x8f, 0xbd, 0x94, 0xf1, 0xa7, 0x30, 0x2c, 0x9c, 0x29, 0x9d, 0x45, 0x1b, 0xea,
	0xc7, 0xba, 0xd2, 0xa8, 0x79, 0x7c, 0x0e, 0x13, 0xaa, 0x16, 0xea, 0x9e, 0xa0, 0xdf, 0x16, 0x4c,
	0x61, 0x40, 0x71, 0x36, 0x65, 0x73, 0xb3, 0x6d, 0x60, 0xff, 0xe7, 0x33, 0x18, 0x13, 0xfe, 0xa8,
	0xd0, 0x16, 0xa8, 0x6c, 0x65, 0x16, 0xe8, 0xc5, 0x41, 0xed, 0xad, 0x9b, 0xf9, 0x3f, 0xd9, 0x61,
	0xc6, 0xe6, 0x49, 0xb4, 0x4c, 0x18, 0x3f, 0x81, 0xd1, 0x4f, 0xf4, 0xa4, 0x9d, 0x55, 0x26, 0xbf,
	0x75, 0x5e, 0x3c, 0x8a, 0x86, 0x36, 0xd6, 0xd6, 0x79, 0x91, 0x46, 0x3c, 0x85, 0x44, 0x63, 0xb8,
	0xd9, 0x2d, 0x7d, 0x28, 0x3f, 0x5f, 0x5c, 0x5f, 0xee, 0x36, 0xcd, 0x5f, 0x02, 0x60, 0xbd, 0xa5,
	0xd2, 0x6b, 0x42, 0x81, 0x51, 0xc1, 0xe5, 0xc5, 0x1e, 0x35, 0x17, 0x79, 0x01, 0x83, 0xb6, 0x6d,
	0x08, 0x49, 0x9d, 0x84, 0x68, 0x18, 0xbd, 0x4e, 0x52, 0x36, 0xc1, 0xd9, 0x2b, 0x38, 0x7e, 0xe0,
	0xeb, 0x14, 0xbe, 0x81, 0xd3, 0xee, 0xbb, 0x77, 0xa9, 0x3f, 0x7c, 0x87, 0xe3, 0xd0, 0x5c, 0x49,
	0xb9, 0x5d, 0x0e, 0x9e, 0xc9, 0x6d, 0xf8, 0x64, 0x13, 0x3e, 0xd9, 0x8e, 0x89, 0xf8, 0x9d, 0xc6,
	0x41, 0x4e, 0x65, 0x67, 0x8a, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xc7, 0x27, 0x79, 0xc6,
	0x02, 0x00, 0x00,
}
